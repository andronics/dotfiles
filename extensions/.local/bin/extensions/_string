#!/usr/bin/env sh

# ------------------------------

_string_capitalcase() {

    _program='{
        for (i=1; i<=NF; i++) {
            $i = toupper(substr($i, 1, 1)) tolower(substr($i, 2))
        }
        printf("%s", $0)
    }'
    
    [[ -p /dev/stdin ]] && awk -e "${_program}" || awawk -e "${_program}" <<< "$1"

}

_string_lowercase() {

    [[ -p /dev/stdin ]] && tr '[:upper:]' '[:lower:]' || tr '[:upper:]' '[:lower:]' <<< "$1"
        
}

_string_ord() {

    [[ -p /dev/stdin ]] && printf "%d" || printf "%d" <<< "$1"

}

_string_trim() {

    _expression='s/^[ \t]*//;s/[ \t]*$//'

    [[ -p /dev/stdin ]] && sed "${_expression}" || sed "${_expression}" <<< "$1"

} 

_string_uppercase() {

    [[ -p /dev/stdin ]] && tr '[:lower:]' '[:upper:]' || tr '[:lower:]' '[:upper:]' <<< "$1"

} 

_string_url_decode() {

    _expression='s/%\([0-9A-Fa-f][0-9A-Fa-f]\)/\\x\1/g'

    [[ -p /dev/stdin ]] && sed "${_expression}" || sed "${_expression}" <<< "$1"
    
}

_string_url_encode() {

    _program='{
        for (i = 1; i <= length($0); i++) {
            char = substr($0, i, 1);
            if (char ~ /[a-zA-Z0-9.~_-]/) {
                # valid url character
                printf("%s", char);
            } else {
                # convert to hex equivalent
                printf("%%%02X", ord(char));
            }
        }
    }

    function ord(c) {
        return sprintf("%d", c);
    }'

    [[ -p /dev/stdin ]] && awk -e "${_program}" || awk -e "${_program}" <<< "$1"

}